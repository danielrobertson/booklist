generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model book {
  id             BigInt      @id(map: "books_pkey") @unique(map: "books_id_key") @default(autoincrement())
  created_at     DateTime    @default(now()) @db.Timestamptz(6)
  google_book_id String      @unique(map: "books_google_book_id_key")
  list_item      list_item[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model list {
  id          BigInt      @id(map: "lists_pkey") @unique(map: "lists_id_key") @default(autoincrement())
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  external_id String      @unique(map: "lists_external_id_key") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String?
  description String?
  list_item   list_item[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model list_item {
  id         BigInt   @id(map: "list_item_pkey") @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  list_id    BigInt
  book_id    BigInt
  book       book     @relation(fields: [book_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  list       list     @relation(fields: [list_id], references: [id], onDelete: Cascade)

  @@unique([list_id, book_id], name: "unique_list_book_item")
}
